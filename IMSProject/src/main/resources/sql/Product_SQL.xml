<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.inven.mapper.ProductMapper">

    <!-- SQL -->
    <sql id="titleColumn">
        product_code, gender, make_factory, unit_price, IFNULL(DATE(final_update), '-') AS final_update, make_code, product_status
    </sql>

    <sql id="searchCondition">
        WHERE product_code LIKE concat('%', #{productCode}, '%')
        <if test="!gender.equals('')">
            AND gender = #{gender}
        </if>
        <if test="!startDate.equals('') and !endDate.equals('')">
            AND DATE(final_update) BETWEEN DATE(#{startDate}) AND DATE(#{endDate})
        </if>
        <if test="!productStatus.equals('')">
            AND product_status = #{productStatus}
        </if>
    </sql>

    <!-- Select -->

    <select id="selectDetail" parameterType="string" resultType="com.inven.common.model.ProductDetail">
        select color_name, s, m, l, xl, f, total
        from product_detail
        where product_code = #{productCode}
    </select>

    <select id="searchSelect" parameterType="com.inven.common.model.SearchParam" resultType="com.inven.common.model.ProductTitle">
        select <include refid="titleColumn"/>
        from product_title
        <include refid="searchCondition"/>
        ORDER BY input_date DESC
        LIMIT #{start_idx}, #{end_idx}
    </select>

    <select id="searchCount" resultType="int" parameterType="com.inven.common.model.SearchParam">
        SELECT count(*)
        FROM product_title
        <include refid="searchCondition"/>
    </select>

    <select id="overlapCheck" parameterType="string" resultType="int">
        select count(*)
        from product_title
        where product_code = #{productCode}
    </select>

    <!--    resultMap   -->
    <resultMap id="modTitleMap" type="com.inven.common.model.ProductTitle">
        <result property="product_code" column="product_code" />
        <result property="gender" column="gender" />
        <result property="make_factory" column="make_factory" />
        <result property="unit_price" column="unit_price" />
        <result property="final_update" column="final_update" />
        <result property="product_status" column="product_status" />
    </resultMap>

    <resultMap id="modDetailMap" type="com.inven.common.model.ProductDetail">
        <result property="product_code" column="product_code" />
        <result property="color_name" column="color_name" />
        <result property="s" column="s" />
        <result property="m" column="m" />
        <result property="l" column="l" />
        <result property="xl" column="xl" />
        <result property="f" column="f" />
        <result property="total" column="total" />
        <result property="manufacture_day" column="manufacture_day" />
    </resultMap>

    <!-- ADD -->
    <insert id="addTitle" parameterType="hashMap">
        INSERT INTO product_title(product_code, gender)
        VALUES(#{productCode}, #{gender})
    </insert>

    <insert id="addDetails" parameterType="java.util.List">
        INSERT INTO product_detail(product_code, color_name)
        VALUES
        <foreach collection="details" item="item" separator=",">
            (#{item.productCode}, #{item.colorName})
        </foreach>
    </insert>

    <!--    새로운 색상 추가 시     -->
    <insert id="addColor" parameterType="java.util.List">
        INSERT INTO product_detail(product_code, color_name)
        VALUES
        <foreach collection="list" item="item" separator=",">
            (#{item.productCode}, #{item.new_color_name})
        </foreach>
    </insert>


    <!--    update    -->
    <update id="upStatus" parameterType="com.inven.common.model.ProductTitle">
        UPDATE product_title
        SET product_status = #{productStatus}
        WHERE product_code = #{productCode}
    </update>

    <update id="modColor" parameterType="java.util.List">
        <foreach collection="list" item="item" separator=";" close=";">
            UPDATE product_detail
            SET color_name = #{item.update_color_name}
            WHERE product_code = #{item.productCode} AND color_name = #{item.old_color_name}
        </foreach>
    </update>

    <!-- Delete -->

    <!-- 수정 등록 -->
    <!--    <update id="modTitle" parameterType="hashMap">-->
    <!--    UPDATE product_title-->
    <!--    set  product_code = #{product_code}, gender = #{gender}, unit_price = #{unit_price},-->
    <!--			factory_name = #{factory_name}, = #{},-->
    <!--		    manufacturing_date = DATE(#{manufacturing_date}), etc = #{etc}-->
    <!--		WHERE request_code = #{request_code}-->
    <!--    </update>-->

</mapper>