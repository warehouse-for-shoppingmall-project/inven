<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.inven.mapper.RequestMapper">

	<!-- SQL Section -->

	<sql id="titleColumn">
		request_code, product_code, gender, request_status, unit_price, make_factory, total_order_quantity, file_name,
		IFNULL(DATE(request_date), '-') as request_date,
		IFNULL(DATE(get_Date), '-') as get_date,
		IFNULL(DATE(manufacture_day), '-') as manufacture_day,
 		IFNULL(etc,'  ') as etc
   </sql>

	<sql id="detailColumn">
		request_code, product_code, color_name, gender, s, m, l, xl, free, total
	</sql>

	<sql id="search">
		WHERE DATE(request_date) BETWEEN DATE(#{start_date}) AND DATE(#{end_date})
		<if test="!gender.equals('')">
			AND gender = #{gender}
		</if>
		<if test="!request_code.equals('')">
			AND request_code LIKE concat('%', #{request_code}, '%')
		</if>
		<if test="!product_code.equals('')">
			AND product_code LIKE concat('%', #{product_code}, '%')
		</if>
		<if test="!request_status.equals('')">
			AND request_status = #{request_status}
		</if>
	</sql>
<!--	발주테이블 join 쿼리-->
	<sql id="commonQuery">
		SELECT *
		FROM request_title rt
		JOIN request_detail rd
		ON rt.request_code = rd.request_code
   </sql>

	<!-- SELECT Section -->

	<!-- 디테일 테이블만 조회 -->
	<select id="searchDetail" parameterType="hashMap" resultType="hashMap">
		SELECT *
		FROM request_detail
   </select>

	<!-- 조회 전체 카운트 -->
	<select id="searchCount" parameterType="hashMap" resultType="int">
		SELECT count(*)
		FROM request_title
		<include refid="search"/>
	</select>

	<!-- 검색 및 페이징 -->
	<select id="searchWhere" parameterType="hashMap" resultType="hashMap">
		SELECT <include refid="titleColumn"/>
		FROM request_title
		<include refid="search"/>
		ORDER BY request_code DESC
		LIMIT #{start_idx}, #{end_idx}
	</select>

	<!-- 발주코드 상세내역을 가져옴 -->
	<!--
			color_name as colorName	하는 이유
			detail_view 팝업 창 띄울 때 product VO 카멜형식으로 변경해놔서 colorName으로 받아 쓰는데
			여기서는 _ 형식으로 받아와서 에러나서 AS통해 변경
	-->
	<select id="selectReqDetail" parameterType="String" resultType="hashMap">
		SELECT color_name AS colorName, s, m, l, xl, f, total
		FROM request_detail WHERE request_code = #{request_code}
	</select>

	<select id="selectProdTitle" parameterType="String" resultType="hashMap">
		SELECT product_code, gender, make_factory, unit_price, make_code
		FROM product_title WHERE product_code = #{product_code}
	</select>

	<select id="selectProdDetail" parameterType="String" resultType="hashMap">
		SELECT color_name, s, m, l, xl, f, total
		FROM product_detail WHERE product_code = #{product_code}
	</select>

	<!--	발주코드 자동 생성 함수 실행-->
	<select id="makeReqCode" resultType="String">
		SELECT FN_MAKE_REQ_CODE()
	</select>

	<!--	발주등록 시 상품코드 select 해서 고를 수 있게 상품코드 조회 후 html 로 전송-->
	<select id="getAllProdCd" resultType="hashMap">
		SELECT product_code, gender FROM product_title
		ORDER BY input_date DESC
	</select>

	<!-- request_title 발주 수정 시 -->
	<select id="reqModifyTitle" parameterType="hashmap" resultType="hashmap">
		SELECT
		<include refid="titleColumn"/>
		FROM request_title
		WHERE request_code = #{request_code}
		<!--		LIMIT #{start_idx}, #{end_idx}-->
	</select>

	<!-- request_detail 발주 수정 시 -->
	<select id="reqModifyDetail" parameterType="hashmap" resultType="hashmap">
		SELECT color_name, IFNULL(s,0) AS s, IFNULL(m,0) AS m , IFNULL(l,0) AS l,
			IFNULL(xl,0) AS xl, IFNULL(f,0) as f, total
		FROM request_detail
		WHERE request_code = #{request_code}
		<!-- LIMIT #{start_idx}, #{end_idx} -->
	</select>

	<!-- Insert Section	-->

	<!--발주등록 페이지에서 등록 요청 시 request_title 테이블에 insert-->
	<insert id="addTitle" parameterType="hashMap" >
		INSERT INTO request_title (
			request_code, product_code, request_status, unit_price, gender,
			make_factory, total_order_quantity, etc
		)
		VALUES (
			#{request_code}, #{product_code}, #{request_status}, #{unit_price}, #{gender},
			#{make_factory}, #{total_order_quantity}, #{etc}
		)
   </insert>

<!--	발주등록 페이지에서 등록 요청 시 request_detail 테이블에 insert-->
<!--	여러 행 삽입을 위해 for each 문-->
	<insert id="addDetail" parameterType="java.util.List">
		INSERT INTO request_detail(
			request_code, product_code, color_name, s, m, l, xl, f, total
		)
		VALUES
		<foreach collection="list" item="item" separator=",">
		(
			#{item.request_code}, #{item.product_code}, #{item.color_name},
			#{item.s}, #{item.m}, #{item.l}, #{item.xl}, #{item.f}, #{item.total}
		)
		</foreach>
   </insert>

	<!-- Update Section -->

	<!--	발주 상태 update 반영 하는 쿼리 -->
	<update id="upStatus" parameterType="hashMap">
		UPDATE request_title
		SET
		    <if test="request_status.equals('입고')">
				get_date = now(),
			</if>
		    request_status = #{request_status}
		WHERE request_code = #{request_code}
   </update>

	<update id="modTitle" parameterType="hashmap">
		UPDATE request_title
		SET
		    <if test="!manufacture_day.equals('')">
				manufacture_day = #{manufacture_day},
			</if>
		    product_code = #{product_code}, gender = #{gender}, unit_price = #{unit_price},
			make_factory = #{make_factory}, total_order_quantity = #{total_order_quantity},
		    etc = #{etc}
		WHERE request_code = #{request_code}
	</update>

	<update id="modDetail" parameterType="java.util.List">
		<foreach collection="list" item="item" separator=";">
			UPDATE request_detail
			SET product_code = #{item.product_code}, s = #{item.s}, m = #{item.m}, l = #{item.l}, xl = #{item.xl}, f = #{item.f}, total = #{item.total}
			WHERE request_code = #{item.request_code} AND color_name = #{item.color_name}
		</foreach>
	</update>
</mapper>